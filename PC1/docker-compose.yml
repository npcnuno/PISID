##MAKE SURE YOU RUN THIS BEFORE YOU RUN THE SCRIPT
# openssl rand -base64 756 >./mongo-keyfile
# chmod 600 mongo-keyfile
# sudo chown 999:999 mongo-keyfile

services:
  mongo1:
    image: mongo:latest
    container_name: mongo1
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
    command:
      [
        "mongod",
        "--replSet",
        "my-mongo-set",
        "--auth",
        "--keyFile",
        "/etc/mongo-keyfile",
      ]
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile
      - mongo1_data:/data/db
    ports:
      - "30001:27017"
    networks:
      - db-network
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'my-mongo-set',members:[{_id:0,host:'mongo1:27017'},{_id:1,host:'mongo2:27017'},{_id:2,host:'mongo3:27017'}]}) }" | mongosh --port 27017 --username admin --password adminpass --authenticationDatabase admin --quiet
      interval: 5s
      timeout: 30s
      retries: 30

  mongo2:
    image: mongo:latest
    container_name: mongo2
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
    command:
      [
        "mongod",
        "--replSet",
        "my-mongo-set",
        "--auth",
        "--keyFile",
        "/etc/mongo-keyfile",
      ]
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile
      - mongo2_data:/data/db
    ports:
      - "30002:27017"
    networks:
      - db-network

  mongo3:
    image: mongo:latest
    container_name: mongo3
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpass
    command:
      [
        "mongod",
        "--replSet",
        "my-mongo-set",
        "--auth",
        "--keyFile",
        "/etc/mongo-keyfile",
      ]
    volumes:
      - ./mongo-keyfile:/etc/mongo-keyfile
      - mongo3_data:/data/db
    ports:
      - "30003:27017"
    networks:
      - db-network

  mqtt_to_mongodb:
    build: ./mqtt_to_mongo
    depends_on:
      mongo1:
        condition: service_healthy
    networks:
      - db-network
    environment:
      PLAYER_ID: "33"
      MQTT_BROKER: broker.hivemq.com
      MQTT_PORT: "1883"
      MOVEMENT_TOPIC: pisid_mazemov_33
      SOUND_TOPIC: pisid_mazesound_33
      MONGO_URI: "mongodb://admin:adminpass@mongo1:27017,mongo2:27017,mongo3:27017/?replicaSet=my-mongo-set&authSource=admin"
      MONGO_USER: admin
      MONGO_PASS: adminpass
      MONGO_DB: game_monitoring
      MONGO_AUTH_SOURCE: admin
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: always

networks:
  db-network:
    driver: bridge

volumes:
  mongo1_data:
  mongo2_data:
  mongo3_data:
